{RppLexer.KW_Package, "package"}
{RppLexer.KW_Abstract, "abstract"}
{RppLexer.KW_Case, "case"}
{RppLexer.KW_Catch, "catch"}
{RppLexer.KW_Class, "class"}
{RppLexer.KW_Def, "def"}
{RppLexer.KW_Do, "do"}
{RppLexer.KW_Else, "else"}
{RppLexer.KW_Extends, "extends"}
{RppLexer.KW_Final, "final"}
{RppLexer.KW_For, "for"}
{RppLexer.KW_ForSome, "forSome"}
{RppLexer.KW_If, "if"}
{RppLexer.KW_Implicit, "implicit"}
{RppLexer.KW_Import, "import"}
{RppLexer.KW_Lazy, "lazy"}
{RppLexer.KW_Match, "match"}
{RppLexer.KW_New, "new"}
{RppLexer.KW_Null, "null"}
{RppLexer.KW_Object, "object"}
{RppLexer.KW_Override, "override"}
{RppLexer.KW_Private, "private"}
{RppLexer.KW_Protected, "protected"}
{RppLexer.KW_Return, "return"}
{RppLexer.KW_Sealed, "sealed"}
{RppLexer.KW_Super, "super"}
{RppLexer.KW_This, "this"}
{RppLexer.KW_Throw, "throw"}
{RppLexer.KW_Trait, "trait"}
{RppLexer.KW_Try, "try"}
{RppLexer.KW_Type, "type"}
{RppLexer.KW_Val, "val"}
{RppLexer.KW_Var, "var"}
{RppLexer.KW_While, "while"}
{RppLexer.KW_With, "with"}
{RppLexer.KW_Yield, "yield"}
{RppLexer.OP_Semi, ";"}
{RppLexer.OP_LBracket, "["}
{RppLexer.OP_RBracket, "]"}
{RppLexer.OP_LBrace, "{"}
{RppLexer.OP_RBrace, "}"}
{RppLexer.OP_Comma, ","}
{RppLexer.OP_LParen, "("}
{RppLexer.OP_RParen, ")"}
{RppLexer.OP_Colon, ":"}
{RppLexer.OP_Eq, "="}
{RppLexer.OP_Dot, "."}
{RppLexer.OP_Star, "*"}